# Gitleaks Secrets Scan Workflow
# Epic: TSE-0002 - Security Hardening and Audit Framework
# Phase: Phase 3 - Secrets Scanning
# Generated: {{DATE}}
#
# This workflow scans the entire Git history for leaked credentials, API keys,
# tokens, and other secrets using Gitleaks.
#
# Documentation: https://github.com/gitleaks/gitleaks

name: Gitleaks Secrets Scan

on:
  push:
    branches: [ {{MAIN_BRANCH}}, "security/**", "deploy/**" ]
  pull_request:
    branches: [ {{MAIN_BRANCH}} ]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  scan:
    runs-on: {{RUNNER}}
    timeout-minutes: 10

    steps:
      - name: Checkout repository (full history)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # CRITICAL: Full history scan

      - name: Run Gitleaks
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITLEAKS_CONFIG: .gitleaks.toml

      - name: Upload Gitleaks report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: gitleaks-report
          path: gitleaks.json
          retention-days: 90

      - name: Display scan summary
        if: always()
        run: |
          echo "=== Gitleaks Secrets Scan Complete ==="
          if [ -f gitleaks.json ]; then
            echo "Scan completed. Check artifacts for details."
            if command -v jq &> /dev/null; then
              echo ""
              echo "Summary:"
              jq '.[] | {file: .File, secret: .Secret, rule: .RuleID}' gitleaks.json 2>/dev/null || echo "Results available in artifact"
            fi
          else
            echo "No secrets detected in Git history."
          fi
